name: Deploy to Release Service API
on:
  push:
    branches:
      - main

jobs:
  cicd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'gradle'
          cache-dependency-path: |
            application/*.gradle*
            application/**/gradle-wrapper.properties

      - name: Build with Gradle
        run: ./gradlew application:build
          
      - name: Docker Build
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dalcon:latest -f application/Dockerfile application

      - name: Docker Push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/dalcon:latest

      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --protocol tcp --port 22 --cidr '${{ steps.ip.outputs.ipv4 }}/32' --group-id 'sg-068704244f3ae2170'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2

      - name: Deploy to Release Service API
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.RELEASE_SERVICE_API_HOST }}
          username: ${{ secrets.RELEASE_SERVICE_API_USERNAME }}
          key: ${{ secrets.RELEASE_SERVICE_API_KEY }}
          port: 22
          script: ./rolling-application.sh

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-name application --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            {
                "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
            }
        if: always()